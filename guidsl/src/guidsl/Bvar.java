// Automatically generated code.  Edit at your own risk!
// Generated by bali2jak v2002.09.03.

package guidsl;

import Jakarta.util.*;
import java.io.*;
import java.util.*;

public class Bvar extends BExpr {

    final public static int ARG_LENGTH = 1 /* Kludge! */ ;
    final public static int TOK_LENGTH = 1 ;

    public AstToken getIDENTIFIER () {
        
        return (AstToken) tok [0] ;
    }

    public boolean[] printorder () {
        
        return new boolean[] {true} ;
    }

    public Bvar setParms (AstToken tok0) {
        
        arg = new AstNode [ARG_LENGTH] ;
        tok = new AstTokenInterface [TOK_LENGTH] ;
        
        tok [0] = tok0 ;            /* IDENTIFIER */
        
        InitChildren () ;
        return (Bvar) this ;
    }

    public void visit( Visitor v ) {
        
        v.action( this );
    }

   public node eharvest () {
      String name = tok[0].getTokenName();
      // check to see if this identifier was harvested already
      // if not, we have an error
      if (variable.find(name) == null)
         Util.error( "variable " + name + " referenced in a constraint, but" +
                     " not defined in grammar");
      return new bterm( name );
    }

}
