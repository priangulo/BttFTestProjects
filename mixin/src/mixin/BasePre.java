// Automatically generated code.  Edit at your own risk!
// Generated by bali2jak v2002.09.03.

package mixin;

public class BasePre extends PrimaryPrefix {

    final public static int ARG_LENGTH = 2 ;
    final public static int TOK_LENGTH = 4 ;

    public AST_TypeNameList getAST_TypeNameList () {
        
        AstNode node = arg[0].arg [0] ;
        return (node != null) ? (AST_TypeNameList) node : null ;
    }

    public QName getQName () {
        
        return (QName) arg [1] ;
    }

    public boolean[] printorder () {
        
        return new boolean[] {true, true, false, true, true, false} ;
    }

    public BasePre setParms
    (AstToken tok0, AstToken tok1, AstOptNode arg0, AstToken tok2, AstToken tok3, QName arg1)
    {
        
        arg = new AstNode [ARG_LENGTH] ;
        tok = new AstTokenInterface [TOK_LENGTH] ;
        
        tok [0] = tok0 ;            /* "Super" */
        tok [1] = tok1 ;            /* "(" */
        arg [0] = arg0 ;            /* [ AST_TypeNameList ] */
        tok [2] = tok2 ;            /* ")" */
        tok [3] = tok3 ;            /* "." */
        arg [1] = arg1 ;            /* QName */
        
        InitChildren () ;
        return (BasePre) this ;
    }

    @mixin.R4Feature(mixin.R4Feature.CommonError)


    public void checkForErrors( int stage, String file ) {

        if ( stage != 0 ) {
            super.checkForErrors( stage, file );
            return;
        }

        MethodDcl.seenSUPER= true;
        if (!Ute.withinRefines)
           AstNode.warning(tok[0],
              "cannot use Super outside of a refines type declaration -- "
              + "use 'super' instead");
    }

}
